{"version":3,"sources":["gmap.js","main.js"],"names":[],"mappingsxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["var map;\n/*An array of all the markers\n0: center marker\nn*1: origin markers\nn*2: destination markers\n*/\nvar markers = [];\n\n/*Default center*/\nvar melbourne = {lat: -37.813628, lng: 144.963058};\n\n/*set center button*/\nfunction CenterControl(controlDiv, map){\n    var control = this;\n    /*prohibit floating objects on both side*/\n    controlDiv.style.clear = 'both';\n    /*set CSS for the control border*/\n    var setCenterUI = createAndAppend(\n        'div',\n        'Click to select a center',\n        'setCenterUI',\n        controlDiv);\n\n    /*set CSS for the control interior*/\n    var setCenterText = createAndAppend(\n        'div',\n        '',\n        'setCenterText',\n        setCenterUI);\n    setCenterText.innerHTML = 'Set Center';\n\n    /*click enevt listener*/\n    setCenterUI.addEventListener('click', function(){\n        var newCenter = map.getCenter();\n        control.setCenter(newCenter);\n    });\n\n}\n\n/*property to store and set center coordinate*/\n//CenterControl.prototype.center_ = null;\nCenterControl.prototype.setCenter = function(center) {\n        //this.center_ = center;\n        console.log('set center', center.toString());\n        /*set centre coordinate to the form*/\n        document.getElementById('centerText').value =\n                center.lat().toPrecision(8) + \", \" +\n                center.lng().toPrecision(8);\n        /* set center marker to the map*/\n        var marker = setMarker(center,\"C\");\n        setMapOnAll(null);\n        markers[labelToID(\"C\")] = marker;\n        setMapOnAll(map);\n        //alert(focusedID);\n      };\n\nfunction RouteControl(controlDiv, map){\n    var control = this;\n    /*prohibit floating objects on both side*/\n    controlDiv.style.clear = 'both';\n    var setOriginUI = createAndAppend(\n        'div',\n        'Set the origin',\n        'setOriginUI',\n        controlDiv\n    );\n\n    var setDestinationUI = createAndAppend(\n        'div',\n        'Set the destination',\n        'setDestinationUI',\n        controlDiv\n    );\n\n    var setOriginText = createAndAppend(\n        'div',\n        '',\n        'setOriginText',\n        setOriginUI\n    );\n    setOriginText.innerHTML = 'Set Origin';\n\n    var setDestinationText = createAndAppend(\n        'div',\n        '',\n        'setDestinationText',\n        setDestinationUI\n    );\n    setDestinationText.innerHTML = 'Set Destination';\n\n    setOriginText.addEventListener('click',function(){\n        alert(focusedID);\n        var marker = setMarker(map.center,'O', true);\n        setMapOnAll(null);\n        markers[labelToID(focusedID)] = marker;\n        setMapOnAll(map);\n\n    });\n\n    setDestinationText.addEventListener('click', function(){\n        alert(focusedID);\n        var marker = setMarker(map.center,'D', true);\n        setMapOnAll(null);\n        markers[labelToID(focusedID)] = marker;\n        setMapOnAll(map);\n    });\n\n\n}\n\n/*call back function to initialise the map view*/\nfunction initMap() {\n    map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 12,\n        center: melbourne,\n    });\n\n    /*Container for the center control*/\n    var centerControlDiv = document.createElement('div');\n    var centerControl = new CenterControl(centerControlDiv, map, melbourne);\n\n    /*Attach the container to the map*/\n    centerControlDiv.style['padding-top'] = '10px';\n    map.controls[google.maps.ControlPosition.TOP_CENTER].push(centerControlDiv);\n\n    /*Attach the search box*/\n    /*var searchBox = document.getElementById('pac-input');\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(searchBox);*/\n\n    var routeControlDiv = document.createElement('div');\n    var routeControl = new RouteControl(routeControlDiv,map);\n\n    map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(routeControlDiv);\n\n}\n\n/*get the default marker object by latlng and a label*/\nfunction setMarker(latlng, label, dragable){\n    var marker = new google.maps.Marker({\n        position: latlng,\n        label: label,\n        draggable: dragable,\n    });\n    return marker;\n}\n\n/*get the key of a marker in the marker array*/\nfunction labelToID(label){\n    var arraykey = null;\n    switch (label.substring(0,1)) {\n        case \"C\":\n            arraykey = 0;\n            break;\n        case \"o\":\n            arraykey = 1;\n            break;\n        case \"d\":\n            arraykey = 2;\n            break;\n        default:\n            return false;\n    }\n    if (Number(label.substring(-1))>1) {\n        arraykey *= number(label.substring(-1));\n    }\n    return arraykey;\n}\n\n/*render the array of markers on the map*/\nfunction setMapOnAll(map) {\n    markers.forEach(function(marker) {\n        console.log(marker);\n      marker.setMap(map);\n    });\n}\n\n/*create and element and append to the parent*/\nfunction createAndAppend(element, title, id, parent){\n    var element = document.createElement(element);\n    element.id = id;\n    element.title = title;\n    parent.appendChild(element);\n    return element;\n}\n","var focusedID;\n$(document).ready(function(){\n\n    /*Map toggle button*/\n    $(\"#map\").on(\"hide.bs.collapse\", function(){\n        $(\"#maptoggle\").toggleClass(\"btn-info\");\n    });\n    $(\"#map\").on(\"show.bs.collapse\", function(){\n        $(\"#maptoggle\").toggleClass(\"btn-info\");\n    });\n\n    var lastRouteID = 0;\n\n    /*Add a route information form*/\n    WFfunction = {\n        addRoute: function(){\n            lastRouteID += 1;\n            var routeSection = \"<div class='form-group' id='route\"+lastRouteID+\"'>\"+\n                                    \"<label class='sr-only' for='routeName\"+lastRouteID+\"'>Route Name</label>\"+\n                                    \"<div class='col-sm-3'>\"+\n                                        \"<input type='text' class='form-control' id='RouteName\"+lastRouteID+\"' placeholder='New Route'>\"+\n                                    \"</div>\"+\n                                    \"<label class='sr-only' for='origin\"+lastRouteID+\"'>Route Name</label>\"+\n                                    \"<div class='col-sm-4'>\"+\n                                        \"<input type='text' class='form-control' id='origin\"+lastRouteID+\"' placeholder='Origin (lat,lng)'>\"+\n                                    \"</div>\"+\n                                    \"<label class='sr-only' for='destination\"+lastRouteID+\"'>Route Name</label>\"+\n                                    \"<div class='col-sm-4'>\"+\n                                        \"<input type='text' class='form-control' id='destination\"+lastRouteID+\"' placeholder='Destination (lat,lng)'>\"+\n                                    \"</div>\"+\n                                    \"<div class='col-sm-1'>\"+\n                                        \"<button type='button' class='close closeRoute'>&times;</button>\"+\n                                    \"</div>\"+\n                                \"</div>\";\n            $('#routeList').append(routeSection);\n            $('#origin'+lastRouteID).on('focus', function(event) {\n                //alert(event.currentTarget.id);\n                focusedID = event.currentTarget.id;\n            });\n            $('#destination'+lastRouteID).on('click', function(event) {\n                focusedID = event.currentTarget.id;\n            });\n        },\n    }\n\n    $('#centerText').on('click', \".closeRoute\", function(event) {\n        event.preventDefault();\n        $(this).parent().parent().remove();\n    });\n\n    $('#centerText').on('focus', function(event) {\n        focusedID = event.currentTarget.id;\n    })\n\n});\n"],"sourceRoot":"/source/"}